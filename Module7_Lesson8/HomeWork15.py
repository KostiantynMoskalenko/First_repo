'''
Рекурсія добре підходить до задачі flatentening. Це процес вирівнювання списків, який полягає в позбавленні вкладеної структури. Наприклад список вигляду [1, 2, [3, 4, [5, 6]], 7] має бути перетворений на плоский (flat) список [1, 2, 3, 4, 5, 6, 7]

Напишіть функцію flatten, яка приймає на вхід список, рекурсивно вирівнюватиме цей список і повертатиме пласку версію списку.

Для виконання завдання можна дотримуватися наступного алгоритму:

Якщо вхідний список порожній, то:
  Повертаємо порожній список
Якщо перший елемент списку є списком, то:
  Отримуємо перший список, рекурсивно викликавши функцію з першим елементом списку
  Отримуємо другий список, рекурсивно викликавши функцію з рештою списку без першого елемента
  Повертаємо конкатенацію двох списків
Якщо перший елемент списку не є списком, то:
  Отримуємо перший список із першого елемента списку
  Отримуємо другий список, рекурсивно викликавши функцію з рештою списку без першого елемента
  Повертаємо конкатенацію двох списків
'''

def flatten(data):
    data_1 = []
    data_2 = []
    flat_list = []
    if data == []:
        return([])
    if type(data[0]) is list:
        data_1 = data_1 + (flatten(data[0]))
        x = data.pop(0)
        data_2 = flatten(data)
        flat_list = data_1 + data_2
    else:
        data_1.append(data[0])
        x = data.pop(0)
        data_2 = flatten(data)
        flat_list = data_1 + data_2
    return(flat_list)

data = [1, 2, [3, 4, [5, 6]], 7]
print(flatten(data))


